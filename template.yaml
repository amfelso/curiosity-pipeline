AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Mars Image Processing Pipeline with Daily Scheduling

Parameters:
  PineconeApiKey:
    Type: String
    Description: API Key for Pinecone
  OpenAiApiKey:
    Type: String
    Description: API Key for OpenAI
  NasaApiKey:
    Type: String
    Description: API Key for NASA

Resources:
  # State Machine for Mars Image Processing
  MarsImageProcessingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/mars_image_pipeline.asl.json
      DefinitionSubstitutions:
        FetchImagesFunctionArn: !GetAtt FetchMarsImagesFunction.Arn
        ProcessMetadataFunctionArn: !GetAtt ProcessMarsImageMetadataFunction.Arn
        GenerateEmbeddingsFunctionArn: !GetAtt GenerateMarsImageEmbeddingFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTransactionTable: !Ref PipelineTransactionLogTable
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchMarsImagesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessMarsImageMetadataFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateMarsImageEmbeddingFunction

  # DynamoDB Table for Pipeline Logs
  PipelineTransactionLogTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: PipelineTransactionLog
      PrimaryKey:
        Name: EarthDate
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  # DynamoDB Table for Simulated Dates
  SimulatedDatesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: SimulatedDates
      PrimaryKey:
        Name: simulation_id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  # Lambda for Daily Scheduling
  DailySchedulerLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: daily_scheduler.app.lambda_handler
      Runtime: python3.9
      Timeout: 60
      Layers:
        - !Ref MarsImageProcessingLayer
      Environment:
        Variables:
          DDB_TABLE_NAME: !Ref PipelineTransactionLogTable
          SIMULATED_DATES_TABLE: !Ref SimulatedDatesTable
          STEP_FUNCTION_ARN: !Ref MarsImageProcessingStateMachine
      Policies:
        - Statement:
            - Sid: DynamoDBAccessPolicy
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
              Resource: 
              - !GetAtt SimulatedDatesTable.Arn
              - !GetAtt PipelineTransactionLogTable.Arn
        - Statement:
            - Sid: StepFunctionsStartExecutionPolicy
              Effect: Allow
              Action:
                - states:StartExecution
              Resource: !Ref MarsImageProcessingStateMachine

  # EventBridge Rule for MVP Simulation
  MVPEventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: "rate(1 day)"
      Targets:
        - Arn: !GetAtt DailySchedulerLambda.Arn
          Id: "DailySchedulerLambdaTarget"
          Input: '{"simulation_id": "mvp"}'
      State: ENABLED

  # Layer for Dependencies
  MarsImageProcessingLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: MarsImageProcessingLayer
      Description: Dependencies for Mars Image Processing functions
      ContentUri: layers/curiosity_pipeline/
      CompatibleRuntimes:
        - python3.9
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: python3.9
      BuildProperties:
        Pipfile: false
        UsePipenv: false
        RequirementsFile: requirements.txt

  # Lambda Functions
  FetchMarsImagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: fetch_images_with_metadata.app.lambda_handler
      Runtime: python3.9
      Description: Fetches the latest images from the NASA Mars Rover API.
      Layers:
        - !Ref MarsImageProcessingLayer
      Timeout: 120
      Environment:
        Variables:
          NUM_IMAGES: 5
          DDB_TABLE_NAME: !Ref PipelineTransactionLogTable
          PINECONE_API_KEY: !Ref PineconeApiKey
          OPENAI_API_KEY: !Ref OpenAiApiKey
          NASA_API_KEY: !Ref NasaApiKey
      Policies:
        - Statement:
            - Sid: ddbPolicy
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:GetItem
              Resource: 
              - !GetAtt PipelineTransactionLogTable.Arn

  ProcessMarsImageMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: generate_memories_and_diary.app.lambda_handler
      Runtime: python3.9
      Description: Processes metadata for Mars images and stores it in S3.
      Layers:
        - !Ref MarsImageProcessingLayer
      Timeout: 120
      Environment:
        Variables:
          DDB_TABLE_NAME: !Ref PipelineTransactionLogTable
          PINECONE_API_KEY: !Ref PineconeApiKey
          OPENAI_API_KEY: !Ref OpenAiApiKey
          NASA_API_KEY: !Ref NasaApiKey
      Policies:
        - Statement:
            - Sid: RekognitionPolicy
              Effect: Allow
              Action:
                - rekognition:DetectLabels
              Resource: '*'
        - Statement:
            - Sid: s3Policy
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource: 'arn:aws:s3:::curiosity-data-1205/*'
        - Statement:
            - Sid: ddbPolicy
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:GetItem
              Resource: !GetAtt PipelineTransactionLogTable.Arn

  GenerateMarsImageEmbeddingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: embed_memories_to_pinecone.app.lambda_handler
      Runtime: python3.9
      Description: Generates vector embeddings for Mars images and stores them in Pinecone.
      Layers:
        - !Ref MarsImageProcessingLayer
      Timeout: 120
      Environment:
        Variables:
          DDB_TABLE_NAME: !Ref PipelineTransactionLogTable
          PINECONE_API_KEY: !Ref PineconeApiKey
          OPENAI_API_KEY: !Ref OpenAiApiKey
          NASA_API_KEY: !Ref NasaApiKey
      Policies:
        - Statement:
            - Sid: s3Policy
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:PutObject
              Resource: 'arn:aws:s3:::curiosity-data-1205/*'
        - Statement:
            - Sid: ddbPolicy
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:GetItem
              Resource: !GetAtt PipelineTransactionLogTable.Arn

Outputs:
  MarsImageProcessingStateMachineArn:
    Description: "Mars Image Processing State Machine ARN"
    Value: !Ref MarsImageProcessingStateMachine

  DailySchedulerLambdaArn:
    Description: "ARN for the DailySchedulerLambda"
    Value: !GetAtt DailySchedulerLambda.Arn

  PipelineTransactionLogTableName:
    Description: "DynamoDB table for transaction logging"
    Value: !Ref PipelineTransactionLogTable