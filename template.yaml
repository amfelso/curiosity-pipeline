AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Mars Image Processing Pipeline

Resources:
  MarsImageProcessingStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/mars_image_pipeline.asl.json
      DefinitionSubstitutions:
        FetchImagesFunctionArn: !GetAtt FetchMarsImagesFunction.Arn
        ProcessMetadataFunctionArn: !GetAtt ProcessMarsImageMetadataFunction.Arn
        GenerateEmbeddingsFunctionArn: !GetAtt GenerateMarsImageEmbeddingFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTransactionTable: !Ref PipelineTransactionLogTable
      Events:
        NightlySchedule:
          Type: Schedule
          Properties:
            Description: Schedule to run the Mars Image Processing State Machine nightly
            Enabled: False
            Schedule: "rate(1 day)"
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref FetchMarsImagesFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessMarsImageMetadataFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GenerateMarsImageEmbeddingFunction
        - DynamoDBWritePolicy:
            TableName: !Ref PipelineTransactionLogTable
  
  MarsImageProcessingLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: MarsImageProcessingLayer
      Description: Dependencies for Mars Image Processing functions
      ContentUri: layers/curiosity_pipeline/
      CompatibleRuntimes:
        - python3.12
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: python3.12
      BuildProperties:
        Pipfile: false
        UsePipenv: false
        RequirementsFile: requirements.txt

  FetchMarsImagesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/fetch_images_with_metadata/
      Handler: app.lambda_handler
      Runtime: python3.12
      Description: Fetches the latest images from the NASA Mars Rover API.
      Layers:
        - !Ref MarsImageProcessingLayer
      Timeout: 120
      Environment:
        Variables:
          PINECONE_API_KEY: !Ref PineconeApiKey
          OPENAI_API_KEY: !Ref OpenAiApiKey
          NASA_API_KEY: !Ref NasaApiKey
          S3_BUCKET: !Ref S3Bucket

  ProcessMarsImageMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/generate_memories_and_diary/
      Handler: app.lambda_handler
      Runtime: python3.12
      Description: Processes metadata for Mars images and stores it in S3.
      Layers:
        - !Ref MarsImageProcessingLayer
      Timeout: 120
      Environment:
        Variables:
          PINECONE_API_KEY: !Ref PineconeApiKey
          OPENAI_API_KEY: !Ref OpenAiApiKey
          NASA_API_KEY: !Ref NasaApiKey
          S3_BUCKET: !Ref S3Bucket

  GenerateMarsImageEmbeddingFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/embed_memories_to_pinecone/
      Handler: app.lambda_handler
      Runtime: python3.12
      Description: Generates vector embeddings for Mars images and stores them in Pinecone.
      Layers:
        - !Ref MarsImageProcessingLayer
      Timeout: 120
      Environment:
        Variables:
          PINECONE_API_KEY: !Ref PineconeApiKey
          OPENAI_API_KEY: !Ref OpenAiApiKey
          NASA_API_KEY: !Ref NasaApiKey
          S3_BUCKET: !Ref S3Bucket

  PipelineTransactionLogTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: PipelineRunID
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  MarsImageProcessingStateMachineArn:
    Description: "Mars Image Processing State Machine ARN"
    Value: !Ref MarsImageProcessingStateMachine

  MarsImageProcessingStateMachineRoleArn:
    Description: "IAM Role for the Mars Image Processing State Machine"
    Value: !GetAtt MarsImageProcessingStateMachineRole.Arn